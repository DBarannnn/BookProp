// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prop.DataContextConfig;

#nullable disable

namespace Prop.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20231004135800_Entities update")]
    partial class Entitiesupdate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Prop.Entity.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlacedFor")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int?>("UserOwnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserOwnerId");

                    b.ToTable("Properties");
                });

            modelBuilder.Entity("Prop.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contacts")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PropertyUser", b =>
                {
                    b.Property<int>("FavoritePropertiesId")
                        .HasColumnType("int");

                    b.Property<int>("FavoriteUsersId")
                        .HasColumnType("int");

                    b.HasKey("FavoritePropertiesId", "FavoriteUsersId");

                    b.HasIndex("FavoriteUsersId");

                    b.ToTable("PropertyUser");
                });

            modelBuilder.Entity("Prop.Entity.Property", b =>
                {
                    b.HasOne("Prop.Entity.User", "UserOwner")
                        .WithMany("Properties")
                        .HasForeignKey("UserOwnerId");

                    b.Navigation("UserOwner");
                });

            modelBuilder.Entity("PropertyUser", b =>
                {
                    b.HasOne("Prop.Entity.Property", null)
                        .WithMany()
                        .HasForeignKey("FavoritePropertiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prop.Entity.User", null)
                        .WithMany()
                        .HasForeignKey("FavoriteUsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Prop.Entity.User", b =>
                {
                    b.Navigation("Properties");
                });
#pragma warning restore 612, 618
        }
    }
}
